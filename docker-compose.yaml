version: '3.9'

services:
  # User Service Application
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      # H2 database is embedded, no external DB needed
      - SERVER_PORT=8080
    networks:
      - user-service-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s

  # Kafka - Optional (uncomment when user-service needs to publish events)
  # kafka:
  #   image: bitnami/kafka:latest
  #   container_name: user-service-kafka
  #   ports:
  #     - "9092:9092"
  #     - "9094:9094"
  #   environment:
  #     # KRaft mode (no Zookeeper)
  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_NODE_ID=1
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
  #
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #
  #     # Development settings
  #     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
  #     - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
  #   volumes:
  #     - kafka-data:/bitnami/kafka
  #   networks:
  #     - user-service-net
  #   healthcheck:
  #     test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10

networks:
  user-service-net:
    driver: bridge

volumes:
  kafka-data:
    driver: local